#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Thu Feb  2 22:23:12 2017
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyFrame.__init__
		kwds["style"] = wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.notebook_1 = wx.Notebook(self, wx.ID_ANY, style=0)
		self.tab_qs = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.button_map_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Map"))
		self.panel_map_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_map_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_sensing_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Sensing"))
		self.panel_sensing_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_sensing_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_localization_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Localization"))
		self.panel_localization_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_localization_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_detection_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Detection"))
		self.panel_detection_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_detection_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_mission_planning_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Mission Planning"))
		self.panel_mission_planning_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_mission_planning_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_motion_planning_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Motion Planning"))
		self.panel_motion_planning_qs = wx.Panel(self.tab_qs, wx.ID_ANY)
		self.label_motion_planning_qs = wx.StaticText(self.tab_qs, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.button_android_tablet_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Android Tablet"))
		self.button_oculus_rift_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Oculus Rift"))
		self.button_vehicle_gateway_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Vehicle Gateway"))
		self.button_cloud_data_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Cloud Data"))
		self.sizer_45_staticbox = wx.StaticBox(self.tab_qs, wx.ID_ANY, "")
		self.button_auto_pilot_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("Auto Pilot"))
		self.button_rosbag_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("RViz"))
		self.button_rqt_qs = wx.ToggleButton(self.tab_qs, wx.ID_ANY, _("RQT"))
		self.tab_setup = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.radio_box_localizer = wx.RadioBox(self.tab_setup, wx.ID_ANY, _("Localizer"), choices=[_("Velodyne"), _("Hokuyo 3D URG")], majorDimension=2, style=wx.RA_SPECIFY_COLS)
		self.button_setup_tf = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("TF"))
		self.panel_setup_tf = wx.Panel(self.tab_setup, wx.ID_ANY)
		self.sizer_42_staticbox = wx.StaticBox(self.tab_setup, wx.ID_ANY, _("Baselink to Localizer"))
		self.button_vehicle_model = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("Vehicle Model"))
		self.panel_vehicle_model = wx.Panel(self.tab_setup, wx.ID_ANY)
		self.sizer_43_staticbox = wx.StaticBox(self.tab_setup, wx.ID_ANY, _("Vehicle Model"))
		self.button_vehicle_info = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("Vehicle Info"))
		self.panel_vehicle_info = wx.Panel(self.tab_setup, wx.ID_ANY)
		self.sizer_43_copy_staticbox = wx.StaticBox(self.tab_setup, wx.ID_ANY, _("Vehicle Info"))
		self.button_rosbag_setup = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_setup = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("RViz"))
		self.button_rqt_setup = wx.ToggleButton(self.tab_setup, wx.ID_ANY, _("RQT"))
		self.tab_map = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.button_point_cloud = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Point Cloud"))
		self.panel_point_cloud = wx.Panel(self.tab_map, wx.ID_ANY)
		self.checkbox_auto_update = wx.CheckBox(self.tab_map, wx.ID_ANY, _("Auto Update"))
		self.choice_scene_num = wx.Choice(self.tab_map, wx.ID_ANY, choices=[_("1x1"), _("3x3"), _("5x5"), _("7x7"), _("9x9")])
		self.button_area_lists = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Area Lists"))
		self.label_9 = wx.StaticText(self.tab_map, wx.ID_ANY, _("Area List :"))
		self.panel_area_lists = wx.Panel(self.tab_map, wx.ID_ANY)
		self.label_point_cloud_bar = wx.StaticText(self.tab_map, wx.ID_ANY, _("Loading bar ... 82%"), style=wx.ALIGN_CENTRE)
		self.label_point_cloud = wx.StaticText(self.tab_map, wx.ID_ANY, "", style=wx.ALIGN_CENTRE)
		self.static_line_4 = wx.StaticLine(self.tab_map, wx.ID_ANY)
		self.button_vector_map = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Vector Map"))
		self.panel_vector_map = wx.Panel(self.tab_map, wx.ID_ANY)
		self.static_line_5 = wx.StaticLine(self.tab_map, wx.ID_ANY)
		self.button_tf = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("TF"))
		self.panel_tf = wx.Panel(self.tab_map, wx.ID_ANY)
		self.sizer_61_staticbox = wx.StaticBox(self.tab_map, wx.ID_ANY, "")
		self.button_pcd_filter = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("PCD Filter"))
		self.panel_pcd_filter = wx.Panel(self.tab_map, wx.ID_ANY)
		self.static_line_5_copy = wx.StaticLine(self.tab_map, wx.ID_ANY)
		self.button_pcd_binarizer = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("PCD Binarizer"))
		self.panel_pcd_binarizer = wx.Panel(self.tab_map, wx.ID_ANY)
		self.sizer_39_staticbox = wx.StaticBox(self.tab_map, wx.ID_ANY, _("Map Tools"))
		self.button_rosbag_map = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_map = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("RViz"))
		self.button_rqt_map = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("RQT"))
		self.tab_sensing = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_sensing = wx.ScrolledWindow(self.tab_sensing, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.tree_ctrl_sense = wx.TreeCtrl(self.tab_sensing, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.button_calibration_toolkit = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("Calibration Tool Kit"))
		self.button_calibration_publisher = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("Calibration Publisher"))
		self.sizer_69_staticbox = wx.StaticBox(self.tab_sensing, wx.ID_ANY, "")
		self.button_points_image = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("Points Image"))
		self.button_virtual_scan_image = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("Virtual Scan Image"))
		self.button_scan_image = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("Scan Image"))
		self.sizer_70_staticbox = wx.StaticBox(self.tab_sensing, wx.ID_ANY, "")
		self.button_rosbag_sensing = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_sensing = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("RViz"))
		self.button_rqt_sensing = wx.ToggleButton(self.tab_sensing, wx.ID_ANY, _("RQT"))
		self.tab_computing = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.tree_ctrl_0 = wx.TreeCtrl(self.tab_computing, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.tree_ctrl_1 = wx.TreeCtrl(self.tab_computing, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.button_synchronization = wx.ToggleButton(self.tab_computing, wx.ID_ANY, _("Synchronization"))
		self.button_rosbag_computing = wx.ToggleButton(self.tab_computing, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_computing = wx.ToggleButton(self.tab_computing, wx.ID_ANY, _("RViz"))
		self.button_rqt_computing = wx.ToggleButton(self.tab_computing, wx.ID_ANY, _("RQT"))
		self.tab_interface = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.button_android_tablet_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("Android Tablet"))
		self.button_oculus_rift_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("Oculus Rift"))
		self.button_vehicle_gateway_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("Vehicle Gateway"))
		self.sizer_25_staticbox = wx.StaticBox(self.tab_interface, wx.ID_ANY, "")
		self.checkbox_sound = wx.CheckBox(self.tab_interface, wx.ID_ANY, _("Sound"))
		self.sizer_12_staticbox = wx.StaticBox(self.tab_interface, wx.ID_ANY, "")
		self.button_auto_pilot_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("Auto Pilot"))
		self.label_5 = wx.StaticText(self.tab_interface, wx.ID_ANY, _("Lamp"))
		self.button_statchk_lamp_l = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("L"))
		self.button_statchk_lamp_r = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("R"))
		self.label_5_copy = wx.StaticText(self.tab_interface, wx.ID_ANY, _("Indicator"))
		self.button_statchk_indi_l = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("L"))
		self.button_statchk_indi_r = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("R"))
		self.button_statchk_d = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("D"))
		self.button_statchk_r = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("R"))
		self.button_statchk_b = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("B"))
		self.button_statchk_n = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("N"))
		self.panel_interface_cc = wx.Panel(self.tab_interface, wx.ID_ANY)
		self.sizer_26_staticbox = wx.StaticBox(self.tab_interface, wx.ID_ANY, "")
		self.button_rosbag_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("RViz"))
		self.button_rqt_interface = wx.ToggleButton(self.tab_interface, wx.ID_ANY, _("RQT"))
		self.tab_database = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.tree_ctrl_data = wx.TreeCtrl(self.tab_database, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.text_ctrl_query = wx.TextCtrl(self.tab_database, wx.ID_ANY, _("sentence"))
		self.button_query = wx.Button(self.tab_database, wx.ID_ANY, _("Query"))
		self.list_ctrl_sql = wx.ListCtrl(self.tab_database, wx.ID_ANY, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
		self.button_rosbag_database = wx.ToggleButton(self.tab_database, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_database = wx.ToggleButton(self.tab_database, wx.ID_ANY, _("RViz"))
		self.button_rqt_database = wx.ToggleButton(self.tab_database, wx.ID_ANY, _("RQT"))
		self.tab_simulation = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_rosbag_play = wx.Panel(self.tab_simulation, wx.ID_ANY)
		self.sizer_79_staticbox = wx.StaticBox(self.tab_simulation, wx.ID_ANY, "")
		self.button_play_rosbag_play = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("Play"))
		self.button_stop_rosbag_play = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("Stop"))
		self.button_pause_rosbag_play = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("Pause"))
		self.label_rosbag_play_bar = wx.StaticText(self.tab_simulation, wx.ID_ANY, _("Playing ... 82 %"))
		self.label_rosbag_play_pos = wx.StaticText(self.tab_simulation, wx.ID_ANY, "")
		self.static_line_3 = wx.StaticLine(self.tab_simulation, wx.ID_ANY)
		self.label_rosbag_play_total = wx.StaticText(self.tab_simulation, wx.ID_ANY, "")
		self.panel_5 = wx.ScrolledWindow(self.tab_simulation, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.label_rosbag_info = wx.StaticText(self.panel_5, wx.ID_ANY, "")
		self.button_rosbag_simulation = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_simulation = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("RViz"))
		self.button_rqt_simulation = wx.ToggleButton(self.tab_simulation, wx.ID_ANY, _("RQT"))
		self.tab_status = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_3 = wx.ScrolledWindow(self.tab_status, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.label_top_cmd = wx.StaticText(self.panel_3, wx.ID_ANY, "")
		self.sizer_86_staticbox = wx.StaticBox(self.tab_status, wx.ID_ANY, "")
		self.panel_4 = wx.ScrolledWindow(self.tab_status, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.label_node_time = wx.StaticText(self.panel_4, wx.ID_ANY, "")
		self.sizer_87_staticbox = wx.StaticBox(self.panel_4, wx.ID_ANY, "")
		self.checkbox_stdout = wx.CheckBox(self.tab_status, wx.ID_ANY, _("Stdout"))
		self.checkbox_stderr = wx.CheckBox(self.tab_status, wx.ID_ANY, _("Stderr"))
		self.text_ctrl_stdout = wx.TextCtrl(self.tab_status, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.HSCROLL)
		self.sizer_stdout_staticbox = wx.StaticBox(self.tab_status, wx.ID_ANY, "")
		self.button_system_monitor = wx.ToggleButton(self.tab_status, wx.ID_ANY, _("System Monitor"))
		self.button_ftrace = wx.ToggleButton(self.tab_status, wx.ID_ANY, _("Ftrace"))
		self.button_rosbag_status = wx.ToggleButton(self.tab_status, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_status = wx.ToggleButton(self.tab_status, wx.ID_ANY, _("RViz"))
		self.button_rqt_status = wx.ToggleButton(self.tab_status, wx.ID_ANY, _("RQT"))
		self.tab_topics = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_topics_list = wx.ScrolledWindow(self.tab_topics, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.checkbox_topics_echo = wx.CheckBox(self.tab_topics, wx.ID_ANY, _("Echo"))
		self.text_ctrl_topics_echo = wx.TextCtrl(self.tab_topics, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.HSCROLL)
		self.panel_topics_info = wx.ScrolledWindow(self.tab_topics, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.label_topics_info = wx.StaticText(self.panel_topics_info, wx.ID_ANY, "")
		self.sizer_36_staticbox = wx.StaticBox(self.tab_topics, wx.ID_ANY, _("Info"))
		self.button_refresh_topics = wx.Button(self.tab_topics, wx.ID_ANY, _("Refresh"))
		self.button_rosbag_topics = wx.ToggleButton(self.tab_topics, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_topics = wx.ToggleButton(self.tab_topics, wx.ID_ANY, _("RViz"))
		self.button_rqt_topics = wx.ToggleButton(self.tab_topics, wx.ID_ANY, _("RQT"))
		self.tab_matlab = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.button_matlab = wx.Button(self.tab_matlab, wx.ID_ANY, _("MATLAB code"))
		self.panel_matlab = wx.Panel(self.tab_matlab, wx.ID_ANY)
		self.button_ref = wx.Button(self.tab_matlab, wx.ID_ANY, _("Ref"))
		self.button_simulink = wx.Button(self.tab_matlab, wx.ID_ANY, _("Simulink code"))
		self.panel_simulink = wx.Panel(self.tab_matlab, wx.ID_ANY)
		self.button_ref_simulink = wx.Button(self.tab_matlab, wx.ID_ANY, _("Ref"))
		self.sizer_45_copy_staticbox = wx.StaticBox(self.tab_matlab, wx.ID_ANY, _("MATLAB/Simulink code"))
		self.button_rqt_graph_autoware = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("rqt_graph_autoware"))
		self.button_matlab_code_generation = wx.Button(self.tab_matlab, wx.ID_ANY, _("MATLAB template code"))
		self.button_simulink_model_generation = wx.Button(self.tab_matlab, wx.ID_ANY, _("Simulink template model"))
		self.text_ctrl_nodename = wx.TextCtrl(self.tab_matlab, wx.ID_ANY, _("Node name"))
		self.sizer_45_copy_copy_staticbox = wx.StaticBox(self.tab_matlab, wx.ID_ANY, _("Code generation"))
		self.panel_nodes_list = wx.ScrolledWindow(self.tab_matlab, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.panel_nodes_info = wx.ScrolledWindow(self.tab_matlab, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.label_nodes_info = wx.StaticText(self.panel_nodes_info, wx.ID_ANY, "")
		self.sizer_36_copy_staticbox = wx.StaticBox(self.tab_matlab, wx.ID_ANY, _("Info"))
		self.button_refresh_nodes = wx.Button(self.tab_matlab, wx.ID_ANY, _("Refresh"))
		self.button_matlab_exe = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("MATLAB"))
		self.button_simulink_exe = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("Simulink"))
		self.button_rosbag_matlab = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("ROSBAG"))
		self.button_rviz_matlab = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("RViz"))
		self.button_rqt_matlab = wx.ToggleButton(self.tab_matlab, wx.ID_ANY, _("RQT"))
		self.bitmap_logo = wx.StaticBitmap(self, wx.ID_ANY, wx.NullBitmap)

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_map_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_sensing_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_localization_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_detection_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_mission_planning_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_motion_planning_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_android_tablet_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_oculus_rift_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_vehicle_gateway_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_cloud_data_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnAutoPilot, self.button_auto_pilot_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_qs)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_qs)
		self.Bind(wx.EVT_RADIOBOX, self.OnSetupLocalizer, self.radio_box_localizer)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_setup_tf)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_vehicle_model)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_vehicle_info)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_setup)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_setup)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_setup)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_point_cloud)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_area_lists)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_vector_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_tf)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_pcd_filter)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_pcd_binarizer)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_calibration_toolkit)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnCalibrationPublisher, self.button_calibration_publisher)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_points_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_virtual_scan_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_scan_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_sensing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_sensing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_sensing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_synchronization)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_computing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_computing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_computing)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_android_tablet_interface)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_oculus_rift_interface)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_vehicle_gateway_interface)
		self.Bind(wx.EVT_CHECKBOX, self.OnLaunchKill, self.checkbox_sound)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnAutoPilot, self.button_auto_pilot_interface)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLamp, self.button_statchk_lamp_l)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLamp, self.button_statchk_lamp_r)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnIndi, self.button_statchk_indi_l)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnIndi, self.button_statchk_indi_r)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_d)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_r)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_b)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_n)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_interface)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_interface)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_interface)
		self.Bind(wx.EVT_BUTTON, self.OnQuery, self.button_query)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_database)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_database)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_database)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagPlay, self.button_play_rosbag_play)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagPlay, self.button_stop_rosbag_play)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagPlay, self.button_pause_rosbag_play)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_simulation)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_simulation)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_simulation)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_system_monitor)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnFtrace, self.button_ftrace)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_status)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_status)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_status)
		self.Bind(wx.EVT_CHECKBOX, self.OnEcho, self.checkbox_topics_echo)
		self.Bind(wx.EVT_BUTTON, self.OnRefreshTopics, self.button_refresh_topics)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_topics)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_topics)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_topics)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_graph_autoware)
		self.Bind(wx.EVT_BUTTON, self.OnRefreshNodes, self.button_refresh_nodes)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_matlab_exe)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_simulink_exe)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRosbagRecord, self.button_rosbag_matlab)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rviz_matlab)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_rqt_matlab)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyFrame.__set_properties
		self.SetTitle(_("Runtime Manager"))
		self.SetSize((925, 584))
		self.button_map_qs.SetMinSize((125, 29))
		self.label_map_qs.SetMinSize((100, 17))
		self.button_sensing_qs.SetMinSize((125, 29))
		self.label_sensing_qs.SetMinSize((100, 17))
		self.button_localization_qs.SetMinSize((125, 29))
		self.label_localization_qs.SetMinSize((100, 17))
		self.button_detection_qs.SetMinSize((125, 29))
		self.label_detection_qs.SetMinSize((100, 17))
		self.button_mission_planning_qs.SetMinSize((125, 29))
		self.label_mission_planning_qs.SetMinSize((100, 17))
		self.button_motion_planning_qs.SetMinSize((125, 29))
		self.label_motion_planning_qs.SetMinSize((100, 17))
		self.button_auto_pilot_qs.SetMinSize((135, 29))
		self.radio_box_localizer.SetSelection(0)
		self.button_point_cloud.SetMinSize((125, 29))
		self.choice_scene_num.SetSelection(0)
		self.button_area_lists.SetMinSize((125, 29))
		self.button_area_lists.Hide()
		self.label_point_cloud.SetMinSize((100, 17))
		self.button_vector_map.SetMinSize((125, 29))
		self.button_tf.SetMinSize((125, 29))
		self.button_pcd_filter.SetMinSize((125, 29))
		self.button_pcd_binarizer.SetMinSize((125, 29))
		self.panel_sensing.SetScrollRate(10, 10)
		self.button_statchk_lamp_l.SetMinSize((32, 29))
		self.button_statchk_lamp_r.SetMinSize((32, 29))
		self.button_statchk_indi_l.SetMinSize((32, 29))
		self.button_statchk_indi_r.SetMinSize((32, 29))
		self.button_statchk_d.SetMinSize((32, 29))
		self.button_statchk_r.SetMinSize((32, 29))
		self.button_statchk_b.SetMinSize((32, 29))
		self.button_statchk_b.SetValue(1)
		self.button_statchk_n.SetMinSize((32, 29))
		self.button_stop_rosbag_play.Enable(False)
		self.button_stop_rosbag_play.SetValue(1)
		self.button_pause_rosbag_play.Enable(False)
		self.label_rosbag_play_pos.SetMinSize((32, 17))
		self.label_rosbag_play_total.SetMinSize((32, 17))
		self.panel_5.SetScrollRate(10, 10)
		self.panel_3.SetScrollRate(10, 10)
		self.panel_4.SetScrollRate(10, 10)
		self.panel_topics_list.SetScrollRate(10, 10)
		self.panel_topics_info.SetScrollRate(10, 10)
		self.button_matlab.SetMinSize((125, 29))
		self.button_ref.SetMinSize((60, 29))
		self.button_simulink.SetMinSize((125, 29))
		self.button_ref_simulink.SetMinSize((60, 29))
		self.text_ctrl_nodename.SetMinSize((150, 27))
		self.panel_nodes_list.SetScrollRate(10, 10)
		self.panel_nodes_info.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyFrame.__do_layout
		self.sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_29 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_cpuinfo = wx.BoxSizer(wx.HORIZONTAL)
		sizer_50 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_16_copy = wx.BoxSizer(wx.VERTICAL)
		sizer_51_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_60_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_32_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_34_copy = wx.BoxSizer(wx.VERTICAL)
		self.sizer_36_copy_staticbox.Lower()
		sizer_36_copy = wx.StaticBoxSizer(self.sizer_36_copy_staticbox, wx.HORIZONTAL)
		sizer_nodes_info = wx.BoxSizer(wx.VERTICAL)
		self.sizer_nodes_list = wx.BoxSizer(wx.VERTICAL)
		self.sizer_45_copy_copy_staticbox.Lower()
		sizer_45_copy_copy = wx.StaticBoxSizer(self.sizer_45_copy_copy_staticbox, wx.VERTICAL)
		sizer_60_copy_1_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_45_copy_staticbox.Lower()
		sizer_45_copy = wx.StaticBoxSizer(self.sizer_45_copy_staticbox, wx.VERTICAL)
		sizer_53_copy_5_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_5_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_85_copy = wx.BoxSizer(wx.VERTICAL)
		sizer_51_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_1_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_60_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_32 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_34 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_36_staticbox.Lower()
		sizer_36 = wx.StaticBoxSizer(self.sizer_36_staticbox, wx.HORIZONTAL)
		sizer_topics_info = wx.BoxSizer(wx.VERTICAL)
		sizer_35 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_topics_list = wx.BoxSizer(wx.VERTICAL)
		sizer_85 = wx.BoxSizer(wx.VERTICAL)
		sizer_51_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_60_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_20 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_stdout_staticbox.Lower()
		sizer_stdout = wx.StaticBoxSizer(self.sizer_stdout_staticbox, wx.VERTICAL)
		sizer_38 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_87_staticbox.Lower()
		sizer_87 = wx.StaticBoxSizer(self.sizer_87_staticbox, wx.HORIZONTAL)
		self.sizer_86_staticbox.Lower()
		sizer_86 = wx.StaticBoxSizer(self.sizer_86_staticbox, wx.HORIZONTAL)
		sizer_19 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_78 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_37 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_80 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_82 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_83 = wx.BoxSizer(wx.VERTICAL)
		sizer_81 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_79_staticbox.Lower()
		sizer_79 = wx.StaticBoxSizer(self.sizer_79_staticbox, wx.VERTICAL)
		sizer_10 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_17 = wx.BoxSizer(wx.VERTICAL)
		sizer_18 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_24 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_26_staticbox.Lower()
		sizer_26 = wx.StaticBoxSizer(self.sizer_26_staticbox, wx.VERTICAL)
		sizer_77 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_66 = wx.BoxSizer(wx.VERTICAL)
		sizer_72 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_75 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_76_copy = wx.BoxSizer(wx.VERTICAL)
		sizer_54_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_76 = wx.BoxSizer(wx.VERTICAL)
		sizer_54 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_12_staticbox.Lower()
		sizer_12 = wx.StaticBoxSizer(self.sizer_12_staticbox, wx.VERTICAL)
		self.sizer_25_staticbox.Lower()
		sizer_25 = wx.StaticBoxSizer(self.sizer_25_staticbox, wx.HORIZONTAL)
		sizer_71 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_47 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_27 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_68 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_7 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_70_staticbox.Lower()
		sizer_70 = wx.StaticBoxSizer(self.sizer_70_staticbox, wx.VERTICAL)
		self.sizer_69_staticbox.Lower()
		sizer_69 = wx.StaticBoxSizer(self.sizer_69_staticbox, wx.VERTICAL)
		sizer_33 = wx.BoxSizer(wx.VERTICAL)
		sizer_4 = wx.BoxSizer(wx.VERTICAL)
		sizer_62 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_39_staticbox.Lower()
		sizer_39 = wx.StaticBoxSizer(self.sizer_39_staticbox, wx.VERTICAL)
		sizer_53_copy_3_copy_2_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_3_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_61_staticbox.Lower()
		sizer_61 = wx.StaticBoxSizer(self.sizer_61_staticbox, wx.VERTICAL)
		sizer_53_copy_3_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_4 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_64 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_3_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_63 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_3 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_40 = wx.BoxSizer(wx.VERTICAL)
		sizer_62_copy_copy_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52_copy_copy_copy_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_46 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_43_copy_staticbox.Lower()
		sizer_43_copy = wx.StaticBoxSizer(self.sizer_43_copy_staticbox, wx.HORIZONTAL)
		self.sizer_43_staticbox.Lower()
		sizer_43 = wx.StaticBoxSizer(self.sizer_43_staticbox, wx.HORIZONTAL)
		self.sizer_42_staticbox.Lower()
		sizer_42 = wx.StaticBoxSizer(self.sizer_42_staticbox, wx.HORIZONTAL)
		sizer_16 = wx.BoxSizer(wx.VERTICAL)
		sizer_51 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_52 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_60 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_45_staticbox.Lower()
		sizer_45 = wx.StaticBoxSizer(self.sizer_45_staticbox, wx.VERTICAL)
		sizer_59 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_2_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_53.Add(self.button_map_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53.Add(self.panel_map_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53.Add(self.label_map_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53, 1, wx.EXPAND, 0)
		sizer_53_copy_1.Add(self.button_sensing_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_1.Add(self.panel_sensing_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_1.Add(self.label_sensing_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53_copy_1, 1, wx.EXPAND, 0)
		sizer_53_copy_2.Add(self.button_localization_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_2.Add(self.panel_localization_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_2.Add(self.label_localization_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53_copy_2, 1, wx.EXPAND, 0)
		sizer_53_copy_2_copy.Add(self.button_detection_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_2_copy.Add(self.panel_detection_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_2_copy.Add(self.label_detection_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53_copy_2_copy, 1, wx.EXPAND, 0)
		sizer_53_copy_copy.Add(self.button_mission_planning_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_copy.Add(self.panel_mission_planning_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_copy.Add(self.label_mission_planning_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53_copy_copy, 1, wx.EXPAND, 0)
		sizer_53_copy.Add(self.button_motion_planning_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy.Add(self.panel_motion_planning_qs, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy.Add(self.label_motion_planning_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_53_copy, 1, wx.EXPAND, 0)
		sizer_59.Add(self.button_android_tablet_qs, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_59.Add(self.button_oculus_rift_qs, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_59.Add(self.button_vehicle_gateway_qs, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_59.Add(self.button_cloud_data_qs, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_45.Add(sizer_59, 1, wx.EXPAND, 0)
		sizer_16.Add(sizer_45, 1, wx.ALL | wx.EXPAND, 4)
		sizer_60.Add(self.button_auto_pilot_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51.Add(sizer_60, 1, wx.EXPAND, 0)
		sizer_52.Add(self.button_rosbag_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52.Add(self.button_rviz_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52.Add(self.button_rqt_qs, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51.Add(sizer_52, 0, wx.EXPAND, 0)
		sizer_16.Add(sizer_51, 0, wx.EXPAND, 0)
		self.tab_qs.SetSizer(sizer_16)
		sizer_46.Add(self.radio_box_localizer, 0, wx.ALL, 4)
		sizer_42.Add(self.button_setup_tf, 0, wx.ALL, 4)
		sizer_42.Add(self.panel_setup_tf, 1, wx.ALL, 4)
		sizer_46.Add(sizer_42, 0, wx.ALL | wx.EXPAND, 4)
		sizer_43.Add(self.button_vehicle_model, 0, wx.ALL, 4)
		sizer_43.Add(self.panel_vehicle_model, 1, wx.ALL, 4)
		sizer_46.Add(sizer_43, 0, wx.ALL | wx.EXPAND, 4)
		sizer_43_copy.Add(self.button_vehicle_info, 0, wx.ALL, 4)
		sizer_43_copy.Add(self.panel_vehicle_info, 1, wx.ALL, 4)
		sizer_46.Add(sizer_43_copy, 0, wx.ALL | wx.EXPAND, 10)
		sizer_40.Add(sizer_46, 1, wx.EXPAND, 0)
		sizer_62_copy_copy_copy_1.Add((20, 20), 1, 0, 0)
		sizer_52_copy_copy_copy_copy_1.Add(self.button_rosbag_setup, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_1.Add(self.button_rviz_setup, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_1.Add(self.button_rqt_setup, 0, wx.ALL, 4)
		sizer_62_copy_copy_copy_1.Add(sizer_52_copy_copy_copy_copy_1, 0, wx.EXPAND, 0)
		sizer_40.Add(sizer_62_copy_copy_copy_1, 0, wx.EXPAND, 0)
		self.tab_setup.SetSizer(sizer_40)
		sizer_53_copy_3.Add(self.button_point_cloud, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3.Add(self.panel_point_cloud, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_63.Add(sizer_53_copy_3, 1, wx.EXPAND, 0)
		sizer_61.Add(sizer_63, 0, wx.TOP | wx.EXPAND, 4)
		sizer_64.Add(self.checkbox_auto_update, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_64.Add(self.choice_scene_num, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy.Add(self.button_area_lists, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy.Add(self.label_9, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy.Add(self.panel_area_lists, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_64.Add(sizer_53_copy_3_copy, 1, wx.BOTTOM | wx.EXPAND, 4)
		sizer_61.Add(sizer_64, 0, wx.BOTTOM | wx.EXPAND, 4)
		sizer_8.Add(self.label_point_cloud_bar, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8.Add(self.label_point_cloud, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_61.Add(sizer_8, 1, wx.ALL | wx.EXPAND, 4)
		sizer_61.Add(self.static_line_4, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
		sizer_53_copy_4.Add(self.button_vector_map, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_4.Add(self.panel_vector_map, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_61.Add(sizer_53_copy_4, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
		sizer_61.Add(self.static_line_5, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
		sizer_53_copy_3_copy_1.Add(self.button_tf, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy_1.Add(self.panel_tf, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_61.Add(sizer_53_copy_3_copy_1, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
		sizer_4.Add(sizer_61, 0, wx.ALL | wx.EXPAND, 4)
		sizer_53_copy_3_copy_2.Add(self.button_pcd_filter, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy_2.Add(self.panel_pcd_filter, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_39.Add(sizer_53_copy_3_copy_2, 0, wx.EXPAND, 0)
		sizer_39.Add(self.static_line_5_copy, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
		sizer_53_copy_3_copy_2_copy.Add(self.button_pcd_binarizer, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_53_copy_3_copy_2_copy.Add(self.panel_pcd_binarizer, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_39.Add(sizer_53_copy_3_copy_2_copy, 0, wx.EXPAND, 0)
		sizer_4.Add(sizer_39, 0, wx.LEFT | wx.RIGHT | wx.EXPAND, 4)
		sizer_62.Add((20, 20), 1, 0, 0)
		sizer_52_copy.Add(self.button_rosbag_map, 0, wx.ALL, 4)
		sizer_52_copy.Add(self.button_rviz_map, 0, wx.ALL, 4)
		sizer_52_copy.Add(self.button_rqt_map, 0, wx.ALL, 4)
		sizer_62.Add(sizer_52_copy, 0, wx.EXPAND, 0)
		sizer_4.Add(sizer_62, 0, wx.EXPAND, 0)
		self.tab_map.SetSizer(sizer_4)
		sizer_33.Add(self.panel_sensing, 1, wx.EXPAND, 0)
		sizer_5.Add(sizer_33, 1, wx.ALL | wx.EXPAND, 4)
		sizer_7.Add(self.tree_ctrl_sense, 2, wx.EXPAND, 0)
		sizer_69.Add(self.button_calibration_toolkit, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_69.Add(self.button_calibration_publisher, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_7.Add(sizer_69, 2, wx.TOP | wx.EXPAND, 8)
		sizer_70.Add(self.button_points_image, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_70.Add(self.button_virtual_scan_image, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_70.Add(self.button_scan_image, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_7.Add(sizer_70, 3, wx.TOP | wx.BOTTOM | wx.EXPAND, 8)
		sizer_5.Add(sizer_7, 1, wx.ALL | wx.EXPAND, 4)
		sizer_68.Add(sizer_5, 1, wx.EXPAND, 0)
		sizer_62_copy.Add((20, 20), 1, 0, 0)
		sizer_52_copy_copy.Add(self.button_rosbag_sensing, 0, wx.ALL, 4)
		sizer_52_copy_copy.Add(self.button_rviz_sensing, 0, wx.ALL, 4)
		sizer_52_copy_copy.Add(self.button_rqt_sensing, 0, wx.ALL, 4)
		sizer_62_copy.Add(sizer_52_copy_copy, 0, wx.EXPAND, 0)
		sizer_68.Add(sizer_62_copy, 0, wx.EXPAND, 0)
		self.tab_sensing.SetSizer(sizer_68)
		sizer_27.Add(self.tree_ctrl_0, 1, wx.EXPAND, 0)
		sizer_27.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)
		sizer_71.Add(sizer_27, 1, wx.EXPAND, 0)
		sizer_47.Add(self.button_synchronization, 0, wx.ALL, 4)
		sizer_62_copy_copy.Add(sizer_47, 1, wx.EXPAND, 0)
		sizer_52_copy_copy_copy.Add(self.button_rosbag_computing, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy.Add(self.button_rviz_computing, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy.Add(self.button_rqt_computing, 0, wx.ALL, 4)
		sizer_62_copy_copy.Add(sizer_52_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_71.Add(sizer_62_copy_copy, 0, wx.EXPAND, 0)
		self.tab_computing.SetSizer(sizer_71)
		sizer_25.Add(self.button_android_tablet_interface, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_25.Add(self.button_oculus_rift_interface, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_25.Add(self.button_vehicle_gateway_interface, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_9.Add(sizer_25, 3, wx.ALL | wx.EXPAND, 4)
		sizer_12.Add(self.checkbox_sound, 1, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_9.Add(sizer_12, 1, wx.ALL | wx.EXPAND, 4)
		sizer_24.Add(sizer_9, 1, wx.EXPAND, 0)
		sizer_72.Add(self.button_auto_pilot_interface, 1, wx.ALL | wx.EXPAND, 4)
		sizer_75.Add((20, 20), 1, 0, 0)
		sizer_76.Add(self.label_5, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_54.Add(self.button_statchk_lamp_l, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_54.Add(self.button_statchk_lamp_r, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_76.Add(sizer_54, 1, wx.EXPAND, 0)
		sizer_75.Add(sizer_76, 1, 0, 0)
		sizer_76_copy.Add(self.label_5_copy, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_54_copy.Add(self.button_statchk_indi_l, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_54_copy.Add(self.button_statchk_indi_r, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_76_copy.Add(sizer_54_copy, 1, wx.EXPAND, 0)
		sizer_75.Add(sizer_76_copy, 1, 0, 0)
		sizer_75.Add((20, 20), 1, 0, 0)
		sizer_72.Add(sizer_75, 1, 0, 0)
		sizer_26.Add(sizer_72, 0, wx.EXPAND, 0)
		sizer_66.Add(self.button_statchk_d, 0, wx.ALL | wx.EXPAND, 4)
		sizer_66.Add(self.button_statchk_r, 0, wx.ALL | wx.EXPAND, 4)
		sizer_66.Add(self.button_statchk_b, 0, wx.ALL | wx.EXPAND, 4)
		sizer_66.Add(self.button_statchk_n, 0, wx.ALL | wx.EXPAND, 4)
		sizer_77.Add(sizer_66, 0, wx.ALL | wx.EXPAND, 4)
		sizer_77.Add(self.panel_interface_cc, 1, wx.ALL, 4)
		sizer_26.Add(sizer_77, 0, wx.EXPAND, 0)
		sizer_24.Add(sizer_26, 0, wx.ALL | wx.EXPAND, 4)
		sizer_24.Add((20, 20), 1, 0, 0)
		sizer_62_copy_copy_copy.Add((20, 20), 1, 0, 0)
		sizer_52_copy_copy_copy_copy.Add(self.button_rosbag_interface, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy.Add(self.button_rviz_interface, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy.Add(self.button_rqt_interface, 0, wx.ALL, 4)
		sizer_62_copy_copy_copy.Add(sizer_52_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_24.Add(sizer_62_copy_copy_copy, 0, wx.EXPAND, 0)
		self.tab_interface.SetSizer(sizer_24)
		sizer_11.Add(self.tree_ctrl_data, 1, wx.ALL | wx.EXPAND, 4)
		sizer_18.Add(self.text_ctrl_query, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_18.Add(self.button_query, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_17.Add(sizer_18, 0, wx.EXPAND, 0)
		sizer_17.Add(self.list_ctrl_sql, 1, wx.ALL | wx.EXPAND, 4)
		sizer_17.Add((85, 29), 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_11.Add(sizer_17, 1, wx.ALL | wx.EXPAND, 4)
		sizer_10.Add(sizer_11, 1, wx.ALL | wx.EXPAND, 4)
		sizer_62_copy_copy_copy_copy.Add((20, 20), 1, 0, 0)
		sizer_52_copy_copy_copy_copy_copy.Add(self.button_rosbag_database, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_copy.Add(self.button_rviz_database, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_copy.Add(self.button_rqt_database, 0, wx.ALL, 4)
		sizer_62_copy_copy_copy_copy.Add(sizer_52_copy_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_10.Add(sizer_62_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		self.tab_database.SetSizer(sizer_10)
		sizer_79.Add(self.panel_rosbag_play, 1, wx.ALL | wx.EXPAND, 4)
		sizer_78.Add(sizer_79, 0, wx.ALL | wx.EXPAND, 4)
		sizer_81.Add(self.button_play_rosbag_play, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_81.Add(self.button_stop_rosbag_play, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_81.Add(self.button_pause_rosbag_play, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_80.Add(sizer_81, 1, wx.EXPAND, 0)
		sizer_82.Add(self.label_rosbag_play_bar, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_83.Add(self.label_rosbag_play_pos, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_83.Add(self.static_line_3, 0, wx.EXPAND, 0)
		sizer_83.Add(self.label_rosbag_play_total, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_82.Add(sizer_83, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_80.Add(sizer_82, 1, wx.EXPAND, 0)
		sizer_78.Add(sizer_80, 0, wx.ALL | wx.EXPAND, 4)
		sizer_37.Add(self.label_rosbag_info, 1, wx.ALL | wx.EXPAND, 4)
		self.panel_5.SetSizer(sizer_37)
		sizer_78.Add(self.panel_5, 1, wx.EXPAND, 0)
		sizer_62_copy_copy_copy_copy_copy.Add((20, 20), 1, 0, 0)
		sizer_52_copy_copy_copy_copy_copy_copy.Add(self.button_rosbag_simulation, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_copy_copy.Add(self.button_rviz_simulation, 0, wx.ALL, 4)
		sizer_52_copy_copy_copy_copy_copy_copy.Add(self.button_rqt_simulation, 0, wx.ALL, 4)
		sizer_62_copy_copy_copy_copy_copy.Add(sizer_52_copy_copy_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_78.Add(sizer_62_copy_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		self.tab_simulation.SetSizer(sizer_78)
		sizer_19.Add(self.label_top_cmd, 1, wx.ALL | wx.EXPAND, 4)
		self.panel_3.SetSizer(sizer_19)
		sizer_86.Add(self.panel_3, 1, wx.ALL | wx.EXPAND, 4)
		sizer_85.Add(sizer_86, 1, wx.ALL | wx.EXPAND, 4)
		sizer_87.Add(self.label_node_time, 1, wx.ALL, 4)
		self.panel_4.SetSizer(sizer_87)
		sizer_20.Add(self.panel_4, 1, wx.EXPAND, 0)
		sizer_38.Add(self.checkbox_stdout, 0, wx.LEFT, 4)
		sizer_38.Add(self.checkbox_stderr, 0, wx.LEFT, 4)
		sizer_stdout.Add(sizer_38, 0, wx.EXPAND, 0)
		sizer_stdout.Add(self.text_ctrl_stdout, 1, wx.ALL | wx.EXPAND, 4)
		sizer_20.Add(sizer_stdout, 1, wx.EXPAND, 0)
		sizer_85.Add(sizer_20, 1, wx.EXPAND, 0)
		sizer_60_copy.Add(self.button_system_monitor, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_60_copy.Add(self.button_ftrace, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy.Add(sizer_60_copy, 1, wx.EXPAND, 0)
		sizer_52_copy_1.Add(self.button_rosbag_status, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_1.Add(self.button_rviz_status, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_1.Add(self.button_rqt_status, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy.Add(sizer_52_copy_1, 0, wx.EXPAND, 0)
		sizer_85.Add(sizer_51_copy, 0, wx.EXPAND, 0)
		self.tab_status.SetSizer(sizer_85)
		self.panel_topics_list.SetSizer(self.sizer_topics_list)
		sizer_32.Add(self.panel_topics_list, 1, wx.EXPAND, 0)
		sizer_35.Add(self.checkbox_topics_echo, 0, wx.LEFT, 4)
		sizer_35.Add(self.text_ctrl_topics_echo, 1, wx.ALL | wx.EXPAND, 4)
		sizer_34.Add(sizer_35, 1, wx.EXPAND, 0)
		sizer_topics_info.Add(self.label_topics_info, 0, 0, 0)
		self.panel_topics_info.SetSizer(sizer_topics_info)
		sizer_36.Add(self.panel_topics_info, 1, wx.EXPAND, 0)
		sizer_34.Add(sizer_36, 1, wx.EXPAND, 0)
		sizer_32.Add(sizer_34, 1, wx.EXPAND, 0)
		sizer_85_copy.Add(sizer_32, 1, wx.EXPAND, 0)
		sizer_60_copy_copy.Add(self.button_refresh_topics, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy_copy.Add(sizer_60_copy_copy, 1, wx.EXPAND, 0)
		sizer_52_copy_1_copy.Add(self.button_rosbag_topics, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_1_copy.Add(self.button_rviz_topics, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_1_copy.Add(self.button_rqt_topics, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy_copy.Add(sizer_52_copy_1_copy, 0, wx.EXPAND, 0)
		sizer_85_copy.Add(sizer_51_copy_copy, 0, wx.EXPAND, 0)
		self.tab_topics.SetSizer(sizer_85_copy)
		sizer_53_copy_5_copy.Add(self.button_matlab, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_5_copy.Add(self.panel_matlab, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_5_copy.Add(self.button_ref, 0, 0, 0)
		sizer_45_copy.Add(sizer_53_copy_5_copy, 0, wx.ALL | wx.EXPAND, 0)
		sizer_53_copy_5_copy_copy.Add(self.button_simulink, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_5_copy_copy.Add(self.panel_simulink, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_53_copy_5_copy_copy.Add(self.button_ref_simulink, 0, 0, 0)
		sizer_45_copy.Add(sizer_53_copy_5_copy_copy, 0, wx.ALL | wx.EXPAND, 0)
		sizer_16_copy.Add(sizer_45_copy, 0, wx.ALL | wx.EXPAND, 3)
		sizer_60_copy_1_copy.Add(self.button_rqt_graph_autoware, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_60_copy_1_copy.Add(self.button_matlab_code_generation, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_60_copy_1_copy.Add(self.button_simulink_model_generation, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_60_copy_1_copy.Add(self.text_ctrl_nodename, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_45_copy_copy.Add(sizer_60_copy_1_copy, 1, wx.EXPAND, 0)
		sizer_16_copy.Add(sizer_45_copy_copy, 0, wx.ALL | wx.EXPAND, 3)
		self.panel_nodes_list.SetSizer(self.sizer_nodes_list)
		sizer_32_copy.Add(self.panel_nodes_list, 1, wx.EXPAND, 0)
		sizer_nodes_info.Add(self.label_nodes_info, 0, 0, 0)
		self.panel_nodes_info.SetSizer(sizer_nodes_info)
		sizer_36_copy.Add(self.panel_nodes_info, 1, wx.EXPAND, 0)
		sizer_34_copy.Add(sizer_36_copy, 1, wx.EXPAND, 0)
		sizer_32_copy.Add(sizer_34_copy, 1, wx.EXPAND, 0)
		sizer_16_copy.Add(sizer_32_copy, 1, wx.EXPAND, 0)
		sizer_60_copy_copy_copy.Add(self.button_refresh_nodes, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy_1.Add(sizer_60_copy_copy_copy, 1, wx.EXPAND, 0)
		sizer_52_copy_2.Add(self.button_matlab_exe, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_2.Add(self.button_simulink_exe, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_2.Add(self.button_rosbag_matlab, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_2.Add(self.button_rviz_matlab, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_52_copy_2.Add(self.button_rqt_matlab, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_51_copy_1.Add(sizer_52_copy_2, 0, wx.EXPAND, 0)
		sizer_16_copy.Add(sizer_51_copy_1, 0, wx.EXPAND, 0)
		self.tab_matlab.SetSizer(sizer_16_copy)
		self.notebook_1.AddPage(self.tab_qs, _("Quick Start"))
		self.notebook_1.AddPage(self.tab_setup, _("Setup"))
		self.notebook_1.AddPage(self.tab_map, _("Map"))
		self.notebook_1.AddPage(self.tab_sensing, _("Sensing"))
		self.notebook_1.AddPage(self.tab_computing, _("Computing"))
		self.notebook_1.AddPage(self.tab_interface, _("Interface"))
		self.notebook_1.AddPage(self.tab_database, _("Database"))
		self.notebook_1.AddPage(self.tab_simulation, _("Simulation"))
		self.notebook_1.AddPage(self.tab_status, _("Status"))
		self.notebook_1.AddPage(self.tab_topics, _("Topics"))
		self.notebook_1.AddPage(self.tab_matlab, _("MATLAB/Simulink"))
		self.sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
		sizer_29.Add((0, 100), 0, wx.EXPAND, 0)
		self.sizer_cpuinfo.Add(sizer_50, 1, wx.EXPAND, 0)
		sizer_29.Add(self.sizer_cpuinfo, 1, wx.EXPAND, 0)
		self.sizer_1.Add(sizer_29, 0, wx.EXPAND, 0)
		self.sizer_1.Add(self.bitmap_logo, 0, 0, 0)
		self.SetSizer(self.sizer_1)
		self.Layout()
		# end wxGlade

	def OnLaunchKill(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLaunchKill' not implemented!"
		event.Skip()

	def OnAutoPilot(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnAutoPilot' not implemented!"
		event.Skip()

	def OnRosbagRecord(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRosbagRecord' not implemented!"
		event.Skip()

	def OnSetupLocalizer(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnSetupLocalizer' not implemented!"
		event.Skip()

	def OnCalibrationPublisher(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnCalibrationPublisher' not implemented!"
		event.Skip()

	def OnLamp(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLamp' not implemented!"
		event.Skip()

	def OnIndi(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnIndi' not implemented!"
		event.Skip()

	def OnGear(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnGear' not implemented!"
		event.Skip()

	def OnQuery(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnQuery' not implemented!"
		event.Skip()

	def OnRosbagPlay(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRosbagPlay' not implemented!"
		event.Skip()

	def OnFtrace(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnFtrace' not implemented!"
		event.Skip()

	def OnEcho(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnEcho' not implemented!"
		event.Skip()

	def OnRefreshTopics(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRefreshTopics' not implemented!"
		event.Skip()

	def OnRefreshNodes(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRefreshNodes' not implemented!"
		event.Skip()

# end of class MyFrame

class MyDialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialog.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.radio_box = wx.RadioBox(self.panel_2, wx.ID_ANY, "", choices=[_("0"), _("1"), _("2"), _("3")], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialog.__set_properties
		self.SetSize((258, 212))
		self.radio_box.SetSelection(0)
		self.panel_2.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialog.__do_layout
		sizer_13 = wx.BoxSizer(wx.VERTICAL)
		sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14.Add(self.radio_box, 1, wx.LEFT | wx.RIGHT | wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 4)
		self.panel_2.SetSizer(sizer_14)
		sizer_13.Add(self.panel_2, 1, wx.EXPAND, 0)
		sizer_15.Add(self.button_1, 0, wx.ALL, 4)
		sizer_15.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_13.Add(sizer_15, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_13)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialog.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialog.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialog

class MyDialogParam(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogParam.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_v = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogParam.__set_properties
		self.SetTitle(_("dialog_3"))
		self.SetSize((470, 300))
		self.panel_v.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogParam.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_31 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_v = wx.BoxSizer(wx.VERTICAL)
		self.panel_v.SetSizer(self.sizer_v)
		sizer_30.Add(self.panel_v, 1, wx.EXPAND, 0)
		sizer_31.Add(self.button_1, 0, wx.ALL, 4)
		sizer_31.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_30.Add(sizer_31, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_30)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialogParam.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialogParam.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialogParam

class MyDialogRosbagRecord(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogRosbagRecord.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.text_ctrl = wx.TextCtrl(self, wx.ID_ANY, "")
		self.button_ref = wx.Button(self, wx.ID_ANY, _("Ref"))
		self.checkbox_split = wx.CheckBox(self, wx.ID_ANY, _("split"))
		self.label_2 = wx.StaticText(self, wx.ID_ANY, _("size"))
		self.text_ctrl_size = wx.TextCtrl(self, wx.ID_ANY, "")
		self.label_2_copy = wx.StaticText(self, wx.ID_ANY, _("MB"))
		self.button_start = wx.Button(self, wx.ID_ANY, _("Start"))
		self.button_stop = wx.Button(self, wx.ID_ANY, _("Stop"))
		self.panel_1 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_refresh = wx.Button(self, wx.ID_ANY, _("Refresh"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref)
		self.Bind(wx.EVT_BUTTON, self.OnStart, self.button_start)
		self.Bind(wx.EVT_BUTTON, self.OnStop, self.button_stop)
		self.Bind(wx.EVT_BUTTON, self.OnRefresh, self.button_refresh)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogRosbagRecord.__set_properties
		self.SetTitle(_("ROSBAG Record"))
		self.SetSize((300, 430))
		self.button_ref.SetMinSize((40, 29))
		self.text_ctrl_size.SetMinSize((50, 27))
		self.button_stop.Enable(False)
		self.panel_1.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogRosbagRecord.__do_layout
		sizer_41 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_topic = wx.BoxSizer(wx.VERTICAL)
		sizer_44 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_22 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_23 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1.Add(self.text_ctrl, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_1.Add(self.button_ref, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_41.Add(sizer_28_copy_1, 0, wx.EXPAND, 0)
		sizer_22.Add(self.checkbox_split, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_23.Add(self.label_2, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_23.Add(self.text_ctrl_size, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_23.Add(self.label_2_copy, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_22.Add(sizer_23, 1, wx.LEFT | wx.EXPAND, 20)
		sizer_41.Add(sizer_22, 0, wx.EXPAND, 0)
		sizer_44.Add(self.button_start, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_44.Add(self.button_stop, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_41.Add(sizer_44, 0, wx.EXPAND, 0)
		self.panel_1.SetSizer(self.sizer_topic)
		sizer_41.Add(self.panel_1, 1, wx.EXPAND, 0)
		sizer_41.Add(self.button_refresh, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		self.SetSizer(sizer_41)
		self.Layout()
		# end wxGlade

	def OnRef(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnRef' not implemented!"
		event.Skip()

	def OnStart(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnStart' not implemented!"
		event.Skip()

	def OnStop(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnStop' not implemented!"
		event.Skip()

	def OnRefresh(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnRefresh' not implemented!"
		event.Skip()

# end of class MyDialogRosbagRecord

class MyDialogLaneStop(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogLaneStop.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.button_red_light = wx.Button(self, wx.ID_ANY, _("Red Light"))
		self.button_green_light = wx.Button(self, wx.ID_ANY, _("Green Light"))
		self.sizer_3_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Traffic Light"))
		self.button_left_lane = wx.Button(self, wx.ID_ANY, _("<< Left Lane"))
		self.button_right_lane = wx.Button(self, wx.ID_ANY, _("Right Lane >>"))
		self.sizer_3_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Lane Change"))
		self.button_keep_at = wx.Button(self, wx.ID_ANY, _("Keep at"))
		self.text_keep_at = wx.TextCtrl(self, wx.ID_ANY, _("60"))
		self.label_1 = wx.StaticText(self, wx.ID_ANY, _("km/h"))
		self.button_stop_in = wx.Button(self, wx.ID_ANY, _("Stop in"))
		self.text_ctrl_stop_in = wx.TextCtrl(self, wx.ID_ANY, _("5.0"))
		self.label_1_copy = wx.StaticText(self, wx.ID_ANY, _("m"))
		self.sizer_6_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Currnet Lane"))
		self.checkbox_lane_stop = wx.CheckBox(self, wx.ID_ANY, _("Use traffic light recognition result"))
		self.sizer_47_staticbox = wx.StaticBox(self, wx.ID_ANY, _("topic:/config/lane_stop"))
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnTrafficRedLight, self.button_red_light)
		self.Bind(wx.EVT_BUTTON, self.OnTrafficGreenLight, self.button_green_light)
		self.Bind(wx.EVT_CHECKBOX, self.OnTrafficLightRecognition, self.checkbox_lane_stop)
		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogLaneStop.__set_properties
		self.SetTitle(_("lane_stop"))
		self.button_red_light.SetBackgroundColour(wx.Colour(255, 0, 0))
		self.button_green_light.SetBackgroundColour(wx.Colour(0, 255, 0))
		self.text_keep_at.SetMinSize((40, 27))
		self.text_ctrl_stop_in.SetMinSize((40, 27))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogLaneStop.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_31 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_47_staticbox.Lower()
		sizer_47 = wx.StaticBoxSizer(self.sizer_47_staticbox, wx.VERTICAL)
		self.sizer_v = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_6_staticbox.Lower()
		sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.VERTICAL)
		sizer_21_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_3_copy_staticbox.Lower()
		sizer_3_copy = wx.StaticBoxSizer(self.sizer_3_copy_staticbox, wx.VERTICAL)
		self.sizer_3_staticbox.Lower()
		sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.VERTICAL)
		sizer_3.Add(self.button_red_light, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3.Add(self.button_green_light, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_2.Add(sizer_3, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3_copy.Add(self.button_left_lane, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3_copy.Add(self.button_right_lane, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_2.Add(sizer_3_copy, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21.Add(self.button_keep_at, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21.Add(self.text_keep_at, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_21.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_6.Add(sizer_21, 0, wx.EXPAND, 0)
		sizer_21_copy.Add(self.button_stop_in, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21_copy.Add(self.text_ctrl_stop_in, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_21_copy.Add(self.label_1_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_6.Add(sizer_21_copy, 0, wx.EXPAND, 0)
		sizer_2.Add(sizer_6, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		self.sizer_v.Add(sizer_2, 1, wx.EXPAND, 0)
		sizer_30.Add(self.sizer_v, 1, wx.EXPAND, 0)
		sizer_47.Add(self.checkbox_lane_stop, 0, 0, 0)
		sizer_30.Add(sizer_47, 0, wx.ALL | wx.EXPAND, 4)
		sizer_31.Add(self.button_1, 0, wx.ALL, 4)
		sizer_31.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_30.Add(sizer_31, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_30)
		sizer_30.Fit(self)
		self.Layout()
		# end wxGlade

	def OnTrafficRedLight(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnTrafficRedLight' not implemented!"
		event.Skip()

	def OnTrafficGreenLight(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnTrafficGreenLight' not implemented!"
		event.Skip()

	def OnTrafficLightRecognition(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnTrafficLightRecognition' not implemented!"
		event.Skip()

	def OnOk(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialogLaneStop

class MyDialogNdtMapping(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogNdtMapping.__init__
		kwds["style"] = wx.CAPTION
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_v = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.static_line_1 = wx.StaticLine(self, wx.ID_ANY)
		self.text_ctrl_path = wx.TextCtrl(self, wx.ID_ANY, "")
		self.button_ref_path = wx.Button(self, wx.ID_ANY, _("Ref"))
		self.radio_btn_filter_resolution = wx.RadioButton(self, wx.ID_ANY, _("Filter Resolution"))
		self.text_ctrl_filter_resolution = wx.TextCtrl(self, wx.ID_ANY, _("0.2"))
		self.radio_btn_original = wx.RadioButton(self, wx.ID_ANY, _("Original"))
		self.button_3 = wx.Button(self, wx.ID_ANY, _("PCD OUTPUT"))
		self.static_line_2 = wx.StaticLine(self, wx.ID_ANY)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("Close"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_path)
		self.Bind(wx.EVT_RADIOBUTTON, self.OnRadio, self.radio_btn_filter_resolution)
		self.Bind(wx.EVT_RADIOBUTTON, self.OnRadio, self.radio_btn_original)
		self.Bind(wx.EVT_BUTTON, self.OnPcdOutput, self.button_3)
		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogNdtMapping.__set_properties
		self.SetTitle(_("ndt_mapping"))
		self.SetSize((352, 341))
		self.panel_v.SetScrollRate(10, 10)
		self.button_ref_path.SetMinSize((40, 29))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogNdtMapping.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_48 = wx.BoxSizer(wx.VERTICAL)
		sizer_49 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_30.Add(self.panel_v, 1, wx.EXPAND, 0)
		sizer_30.Add(self.static_line_1, 0, wx.EXPAND, 0)
		sizer_28_copy_1.Add(self.text_ctrl_path, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_1.Add(self.button_ref_path, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_48.Add(sizer_28_copy_1, 0, wx.ALL | wx.EXPAND, 4)
		sizer_49.Add(self.radio_btn_filter_resolution, 0, wx.ALL, 4)
		sizer_49.Add(self.text_ctrl_filter_resolution, 0, wx.ALL, 4)
		sizer_49.Add(self.radio_btn_original, 0, wx.ALL, 4)
		sizer_48.Add(sizer_49, 0, wx.ALL | wx.EXPAND, 4)
		sizer_48.Add(self.button_3, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_30.Add(sizer_48, 0, wx.EXPAND, 0)
		sizer_30.Add(self.static_line_2, 0, wx.EXPAND, 0)
		sizer_30.Add(self.button_1, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		self.SetSizer(sizer_30)
		self.Layout()
		# end wxGlade

	def OnRef(self, event):  # wxGlade: MyDialogNdtMapping.<event_handler>
		print "Event handler 'OnRef' not implemented!"
		event.Skip()

	def OnRadio(self, event):  # wxGlade: MyDialogNdtMapping.<event_handler>
		print "Event handler 'OnRadio' not implemented!"
		event.Skip()

	def OnPcdOutput(self, event):  # wxGlade: MyDialogNdtMapping.<event_handler>
		print "Event handler 'OnPcdOutput' not implemented!"
		event.Skip()

	def OnOk(self, event):  # wxGlade: MyDialogNdtMapping.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

# end of class MyDialogNdtMapping

class MyDialogDpm(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogDpm.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_v = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("Detection Start"))
		self.hyperlink_car = wx.HyperlinkCtrl(self, wx.ID_ANY, _("car_param_tuning"), "")
		self.hyperlink_pedestrian = wx.HyperlinkCtrl(self, wx.ID_ANY, _("pedestrian_param_tuning"), "")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_HYPERLINK, self.OnLink, self.hyperlink_car)
		self.Bind(wx.EVT_HYPERLINK, self.OnLink, self.hyperlink_pedestrian)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogDpm.__set_properties
		self.SetTitle(_("dialog_6"))
		self.SetSize((470, 350))
		self.panel_v.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogDpm.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_31 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_v = wx.BoxSizer(wx.VERTICAL)
		self.panel_v.SetSizer(self.sizer_v)
		sizer_30.Add(self.panel_v, 1, wx.EXPAND, 0)
		sizer_31.Add(self.button_1, 1, wx.ALL | wx.EXPAND, 4)
		sizer_28.Add(self.hyperlink_car, 0, wx.ALL, 4)
		sizer_28.Add(self.hyperlink_pedestrian, 0, wx.ALL, 4)
		sizer_31.Add(sizer_28, 1, wx.EXPAND, 0)
		sizer_30.Add(sizer_31, 0, wx.EXPAND, 0)
		self.SetSizer(sizer_30)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialogDpm.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnLink(self, event):  # wxGlade: MyDialogDpm.<event_handler>
		print "Event handler 'OnLink' not implemented!"
		event.Skip()

# end of class MyDialogDpm

class MyDialogCarPedestrian(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogCarPedestrian.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.hyperlink_car = wx.HyperlinkCtrl(self, wx.ID_ANY, _("parameter tuning for car"), "")
		self.hyperlink_pedestrian = wx.HyperlinkCtrl(self, wx.ID_ANY, _("parameter tuning for pedestrian"), "")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_HYPERLINK, self.OnLink, self.hyperlink_car)
		self.Bind(wx.EVT_HYPERLINK, self.OnLink, self.hyperlink_pedestrian)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogCarPedestrian.__set_properties
		self.SetTitle(_("dialog_7"))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogCarPedestrian.__do_layout
		sizer_28 = wx.BoxSizer(wx.VERTICAL)
		sizer_28.Add(self.hyperlink_car, 0, wx.ALL, 4)
		sizer_28.Add(self.hyperlink_pedestrian, 0, wx.ALL, 4)
		self.SetSizer(sizer_28)
		sizer_28.Fit(self)
		self.Layout()
		# end wxGlade

	def OnLink(self, event):  # wxGlade: MyDialogCarPedestrian.<event_handler>
		print "Event handler 'OnLink' not implemented!"
		event.Skip()

# end of class MyDialogCarPedestrian
class MyApp(wx.App):
	def OnInit(self):
		wx.InitAllImageHandlers()
		frame_1 = MyFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(frame_1)
		frame_1.Show()
		return 1

# end of class MyApp

if __name__ == "__main__":
	gettext.install("app") # replace with the appropriate catalog name

	app = MyApp(0)
	app.MainLoop()